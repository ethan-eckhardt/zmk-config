/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAVI 1
#define NUM 2
#define SYM 3
#define FUN 4
#define GAME 5

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  '  | BKSP |
// | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ESC  |
//                    |SHFT |BSPC | TAB |   | ENT | SPC  |SHFT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SQT  &kp BSPC
   &kp LCTRL &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp ESC
   &kp LSHFT &lt NAVI BSPC &lt FUN TAB      &lt SYM RET  &lt NUM SPACE &kp RSHFT
                        >;
                };

                navi_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      | LGUI| LALT|LCTRL|LSHFT|     |   | TAB | LFT | DWN |  UP | RGT | CAPS |      
// |      |     |     |     |     |     |   |     |     |     |     |     | GAME |
//                    |     |     |     |   | ENT | SPC |BSPC |
                        bindings = <
   &none      &none        &none        &none        &none        &none          &none    &none    &none    &none     &none     &none
   &none      &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHFT    &none          &kp TAB  &kp LEFT &kp DOWN &kp UP    &kp RIGHT &kp CAPS 
   &none      &none        &none        &none        &none        &none          &none    &none    &none    &none      &none    &tog GAME
                          	        &none        &trans       &none          &kp ENT  &kp SPACE  &kp BSPC
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |     |   [  |  7  |  8  |  9  |  ]  |   |     |     |     |     |     |      |
// |  {  |   ;  |  4  |  5  |  6  |  =  |   |     |RSHFT|RCTRL|RALT | RGUI|      |      
// |  -  |   `  |  1  |  2  |  3  |  \  |   |     |     |     |     |     |      |
//                    |  (  |  )  |  0  |   |     |     |     |
                        bindings = <
   &none     &kp LBKT  &kp N7 &kp N8   &kp N9   &kp RBKT    &none     &none     &none     &none     &none     &none
   &kp LBRC  &kp SEMI  &kp N4 &kp N5   &kp N6   &kp EQUAL   &none     &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI  &none
   &kp MINUS &kp GRAVE &kp N1 &kp N2   &kp N3   &kp BSLH    &none     &none     &none     &none     &none     &none
                    	      &kp LGUI &trans   &kp SPACE   &none     &trans    &none
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  {  |  &  |  *  |  (  |  }  |   |     |     |     |     |     |      |
// | CTRL |  :  |  $  |  %  |  ^  |  +  |   |     |RSHFT|RCTRL|RALT | RGUI|      |
// | SHFT |  ~  |  !  |  @  |  #  |  |  |   |     |     |     |     |     |      |
//                    |  (  |  )  |  _  |   |     |     |     |
                        bindings = <
   &kp TAB   &kp LBRC  &kp AMPS &kp STAR  &kp RBRKT  &kp RBRC   &none     &none     &none     &none     &none     &none
   &kp LCTRL &kp COLON &kp DLLR &kp PRCNT &kp CARET  &kp PLUS   &none     &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI  &none
   &kp LSHFT &kp TILDE &kp EXCL &kp AT    &kp HASH   &kp PIPE   &none     &none     &none     &none     &none     &none
                    	        &kp LBRC  &kp RBRC   &kp UNDER  &trans    &none     &none
                        >;
                };

                fun_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   | F12 | F7  | F8  |  F9 |     |      |
// |      | LGUI| LALT|LCTRL|LSHFT|     |   | F11 | F4  | F5  |  F6 |     |      |      
// |      |     |     |     |     |     |   | F10 | F1  | F2  |  F3 |     |      |
//                    |     |     |     |   | ENT | SPC |BSPC |
                        bindings = <
   &none      &none        &none        &none        &none        &none          &kp F12    &kp F7    &kp F8    &kp F9     &none     &none
   &none      &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHFT    &none          &kp F11    &kp F4    &kp F5    &kp F6     &none     &none
   &none      &none        &none        &none        &none        &none          &kp F10    &kp F1    &kp F2    &kp F3     &none     &none
                          	        &none        &none        &trans         &kp ENT  &kp SPACE  &kp BKSP
                        >;
                };

                game_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |     |      |     |     |     |      |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |     |   H  |  J  |  K  |  L  |      |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |     |      |     |     |     |  TG3 |
//                    |  O  | SPC |  M  |   | ENT | SPC  | MUTE|
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &none &none  &none     &none   &none  &none
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &none &kp H  &kp J     &kp K   &kp L  &none
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &none &none  &none     &none   &none  &tog GAME
                       &kp O &kp SPACE &kp M   &kp ENT  &kp SPACE &kp C_MUTE
                        >;
                };
        };
};
